(*
BankPin
=======
Methods to interact with the bank pin interface.
*)

{$DEFINE SRL_BANKPIN_INCLUDED}
{$IFNDEF SRL_OSR}
  {$I SRL-T/osr.simba}
{$ENDIF}

type
(*
type TRSBankPin
~~~~~~~~~~~~~~~
.. pascal:: TRSBankPin = type TRSTitledInteface;

Record responsible for the bank pin methods.
*)
  TRSBankPin = type TRSTitledInteface;


(*
BankPin.Setup
~~~~~~~~~~~~~
.. pascal:: procedure TRSBankPin.Setup(); override;

Internal method called automatically by SRL.Setup().
*)
procedure TRSBankPin.Setup(); override;
begin
  inherited;
  
  Self.Name := 'Bank Pin';
  Self.ButtonColors := [CTS1(988769, 30)];
end;

(*
BankPin.SetupAlignment
~~~~~~~~~~~~~~~~~~~~~~
.. pascal:: procedure TRSBankPin.SetupAlignment(Mode: ERSClientMode); override;

Internal method called automatically TRSClient.ClientModeChanged().
*)
procedure TRSBankPin.SetupAlignment(Mode: ERSClientMode); override;
begin
  inherited;

  case Self.Mode of
    ERSClientMode.FIXED:
      begin
        Self.Alignment.Left := [@InterfaceArea.X1];
        Self.Alignment.Right := [@InterfaceArea.X2];
        Self.Alignment.Top := [@InterfaceArea.Y1, 11];
        Self.Alignment.Bottom := [@InterfaceArea.Y2];
        Self.Alignment.Center.MaxWidth := 488;
        Self.Alignment.Center.MaxHeight := 305;
      end;

    ERSClientMode.RESIZABLE_CLASSIC, ERSClientMode.RESIZABLE_MODERN:
      begin
        Self.Alignment.Left := [@InterfaceArea.X1];
        Self.Alignment.Right := [@InterfaceArea.X2];
        Self.Alignment.Top := [@InterfaceArea.Y1, 10];
        Self.Alignment.Bottom := [@InterfaceArea.Y2];
        Self.Alignment.Center.MaxWidth := 488;
        Self.Alignment.Center.MaxHeight := 305;
      end;
  end;
end;

(*
BankPin.GetButtons
~~~~~~~~~~~~~~~~~~
.. pascal:: function TRSBankPin.GetButtons(): TRSButtonArray;

Internal method used to retrieve the buttons of the bank pin interface.

Example
-------

  Debug(BankPin.GetButtons());
*)
function TRSBankPin.GetButtons(): TRSButtonArray;
begin
  Result := FindButtons([[56,56]]);
end;

(*
BankPin.ClickDigit
~~~~~~~~~~~~~~~~~~
.. pascal:: function TRSBankPin.ClickDigit(digit: Char): Boolean;

Method used to click the button with **digit**.

Example
-------

  BankPin.ClickDigit('5');
*)
function TRSBankPin.ClickDigit(digit: Char): Boolean;
var
  Buttons: TRSButtonArray;
  I: Int32;
begin
  Buttons := Self.GetButtons();
  
  if Length(Buttons) = 10 then
  begin
    Result := True;
    
    for I := 0 to High(Buttons) do
      if Buttons[I].FindText(digit, RS_FONT_BOLD_12) then
      begin
        Mouse.Click(Buttons[I].Bounds, MOUSE_LEFT);
        
        Exit;
      end;   
      
    // Already hovering
    Mouse.Click(MOUSE_LEFT);  
  end;
end;

(*
BankPin.Enter
~~~~~~~~~~~~~
.. pascal:: function TRSBankPin.Enter(pin: String): Boolean;

Method used to enter a full bank pin number.

Example
-------

  BankPin.Enter('0123');
*)
function TRSBankPin.Enter(pin: String): Boolean;

  function GetDigitToEnter(): Char;
  begin 
    if OCR.LocateText(Self.Bounds, 'FIRST',  RS_FONT_BOLD_12, TOCRColorFilter.Create([$FFFFFF]), 1) then Exit(pin[1]);
    if OCR.LocateText(Self.Bounds, 'SECOND', RS_FONT_BOLD_12, TOCRColorFilter.Create([$FFFFFF]), 1) then Exit(pin[2]);
    if OCR.LocateText(Self.Bounds, 'THIRD',  RS_FONT_BOLD_12, TOCRColorFilter.Create([$FFFFFF]), 1) then Exit(pin[3]);
    if OCR.LocateText(Self.Bounds, 'FOURTH', RS_FONT_BOLD_12, TOCRColorFilter.Create([$FFFFFF]), 1) then Exit(pin[4]);
  end;

var
  i: Int32;
  digit: Char;
begin
  for 1 to 3 do // 3 Attempts
  begin
    for i := 1 to 4 do
    begin
      digit := GetDigitToEnter();
      if digit = '' then
        Break;
    
      if not Self.ClickDigit(digit) then
        Break;
        
      Wait(1000, 2000, wdLeft);
    end;
    
    if Bank.IsOpen(3000) then
      Exit(True);
  end;

  Result := Bank.IsOpen(3000); // wait 3 extra seconds before failing.
end;

(*
BankPin.IsOpen
~~~~~~~~~~~~~~
.. pascal::
  function TRSBankPin.IsOpen(): Boolean;
  function TRSBankPin.IsOpen(waitTime: Int32; interval: Int32 = -1): Boolean; overload;

Returns true or false if the bank pin is open.

Example
-------

  WriteLn BankPin.IsOpen();
*)
function TRSBankPin.IsOpen(): Boolean;
begin
  Result := Length(Self.GetButtons()) = 10;
end;

function TRSBankPin.IsOpen(waitTime: Int32; interval: Int32 = -1): Boolean; overload;
begin
  if (interval = -1) then
    interval := SRL.TruncatedGauss(50, 1500);

  Result := WaitUntil(Self.IsOpen(), Interval, waitTime);
end;

(*
BankPin.Draw
~~~~~~~~~~~~
.. pascal:: procedure TRSBankPin.Draw(Bitmap: TMufasaBitmap); override;

Draws the interface elements of the bank pin interface in a bitmap. Only used for debugging.
Automatically called with **SRL.Debug()** if the bank pin is open.

Example
-------

  SRL.Debug();
*)
procedure TRSBankPin.Draw(Bitmap: TMufasaBitmap); override;
begin
  if (not Self.IsOpen()) then
    Exit;

  inherited(Bitmap);

 // Bitmap.DrawBoxes(GetDigitBoxes(), False, $00FF00);
end;

(*
var BankPin
~~~~~~~~~~~
Global BankPin variable.
*)
var
  BankPin: TRSBankPin;

function TRSBank.IsOpen(WaitForItems: Boolean = True): Boolean; override;
begin
  if BankPin.IsOpen() and (not BankPin.Enter(Login.GetPlayerPin())) then
    Self.Fatal('Failed to enter bank pin');

  Result := inherited(WaitForItems);
end;

procedure TRSClient.ClientModeChanged; override;
begin
  inherited;

  BankPin.SetupAlignment(Self.Mode);
end;

procedure TSRL.Setup; override;
begin
  inherited;

  BankPin.Setup();
end;

procedure TSRL.Debug(Bitmap: TMufasaBitmap); override;
begin
  inherited;

  BankPin.Draw(Bitmap);
end;
