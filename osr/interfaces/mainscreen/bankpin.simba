(*
# BankPin
Methods to interact with the bank pin interface.
*)

{$DEFINE SRL_BANKPIN_INCLUDED}
{$IFNDEF SRL_OSR}
  {$I SRL-T/osr.simba}
{$ENDIF}

type
  TRSBankPin = type TRSTitledInterface;

procedure TRSBankPin.Setup(); override;
begin
  inherited;
  
  Self.Name := 'Bank Pin';
  Self.ButtonColors := [CTS1(988769, 30)];
end;

procedure TRSBankPin.SetupAlignment(Mode: ERSClientMode); override;
begin
  inherited;

  case Self.Mode of
    ERSClientMode.FIXED:
      begin
        Self.Alignment.Left := [@InterfaceArea.X1];
        Self.Alignment.Right := [@InterfaceArea.X2];
        Self.Alignment.Top := [@InterfaceArea.Y1, 11];
        Self.Alignment.Bottom := [@InterfaceArea.Y2];
        Self.Alignment.Center.MaxWidth := 488;
        Self.Alignment.Center.MaxHeight := 305;
      end;

    ERSClientMode.RESIZABLE_CLASSIC, ERSClientMode.RESIZABLE_MODERN:
      begin
        Self.Alignment.Left := [@InterfaceArea.X1];
        Self.Alignment.Right := [@InterfaceArea.X2];
        Self.Alignment.Top := [@InterfaceArea.Y1, 10];
        Self.Alignment.Bottom := [@InterfaceArea.Y2];
        Self.Alignment.Center.MaxWidth := 488;
        Self.Alignment.Center.MaxHeight := 305;
      end;
  end;
end;

function TRSBankPin.GetButtons(): TRSButtonArray;
begin
  Result := FindButtons([[56,56]]);
end;


(*
## BankPin.IsOpen
```pascal
function TRSBankPin.IsOpen(): Boolean;
function TRSBankPin.IsOpen(waitTime: Int32; interval: Int32 = -1): Boolean; overload;
```

Returns true if the bank pin is open.

Example:
```pascal
WriteLn BankPin.IsOpen();
```
*)
function TRSBankPin.IsOpen(): Boolean;
begin
  Result := Length(Self.GetButtons()) = 10;
end;

function TRSBankPin.IsOpen(waitTime: Int32; interval: Int32 = -1): Boolean; overload;
begin
  if (interval = -1) then
    interval := SRL.TruncatedGauss(50, 1500);

  Result := WaitUntil(Self.IsOpen(), interval, waitTime);
end;


(*
## BankPin.ClickDigit
```pascal
function TRSBankPin.ClickDigit(digit: Char): Boolean; override;
```

Clicks a bank pin digit.

```{note}
Original method by Olly, fixed by INeedBot.
```
*)
function TRSBankPin.ClickDigit(digit: Char): Boolean;
var
  buttons: TRSButtonArray;
  hovering: Boolean;
  i: Int32;
begin
  buttons := Self.GetButtons();
  if Length(buttons) <> 10 then
    Exit;

  for i := 0 to High(buttons) do
  begin
    if OCR.LocateText(buttons[i].Bounds.Expand(5), digit, RS_FONT_BOLD_12, TOCRColorFilter.Create([$007FFF]), 1) then
    begin
      Mouse.Click(buttons[i].Bounds, MOUSE_LEFT);
      Exit(True);
    end;

    if buttons[i].Bounds.Expand(5).Contains(Mouse.Position()) then
      hovering := True;
  end;

  if hovering then
  begin
    Mouse.Click(MOUSE_LEFT);
    Exit(True);
  end;
end;

(*
## BankPin.Enter
```pascal
function TRSBankPin.Enter(pin: String): Boolean;
```

Handles entering the bank pin. Will do 4 attempts before terminating with a fatal error.

Example:
```pascal
BankPin.Enter('0000');
```
*)
function TRSBankPin.Enter(pin: String): Boolean;

  function _GetDigitToEnter(): Char;
  begin
    if OCR.LocateText(Self.Bounds, 'FIRST',  RS_FONT_BOLD_12, TOCRColorFilter.Create([$FFFFFF]), 1) then Exit(pin[1]);
    if OCR.LocateText(Self.Bounds, 'SECOND', RS_FONT_BOLD_12, TOCRColorFilter.Create([$FFFFFF]), 1) then Exit(pin[2]);
    if OCR.LocateText(Self.Bounds, 'THIRD',  RS_FONT_BOLD_12, TOCRColorFilter.Create([$FFFFFF]), 1) then Exit(pin[3]);
    if OCR.LocateText(Self.Bounds, 'FOURTH', RS_FONT_BOLD_12, TOCRColorFilter.Create([$FFFFFF]), 1) then Exit(pin[4]);
  end;

  function _IsUnlocked(): Boolean;
  var
    chatCache: String;
  begin
    if Self.IsOpen() then
      Exit;
    chatCache := Chat.GetChat();
    Result := not chatCache.ContainsAny(['try again', 'forgotten your PIN', 'PIN incorrectly several']);
  end;

var
  i, j: Int32;
  digit: Char;
  chatCache: String;
begin
  for i := 0 to 3 do // 3 Attempts
  begin
    for j := 1 to 4 do
    begin
      digit := _GetDigitToEnter();
      if digit = '' then
        Break;

      if not Self.ClickDigit(digit) then
        Break;

      Wait(1000, 2000, wdLeft);
    end;

    chatCache := Chat.GetChat();
    if 'try again' in chatCache then
    begin
      Chat.ClickContinue(True);
      Continue;
    end;

    if 'forgotten your PIN' in chatCache then
    begin
      WaitUntil(not ('forgotten your PIN' in Chat.GetChat()), 300, 20000);
      Continue;
    end;

    if 'PIN incorrectly several' in chatCache then
      Self.Fatal('Failed to enter the bank pin several times. Check that the pin is correct.');

    if WaitUntil(_IsUnlocked(), 300, 3000) then
      Exit(True);
  end;

  Result := WaitUntil(_IsUnlocked(), 300, 3000); //wait 3 extra seconds before failing.
end;

procedure TRSBankPin.Draw(Bitmap: TMufasaBitmap); override;
begin
  if (not Self.IsOpen()) then
    Exit;

  inherited(Bitmap);

 // Bitmap.DrawBoxes(GetDigitBoxes(), False, $00FF00);
end;

var
  BankPin: TRSBankPin;

function TRSBank.IsOpen(WaitForItems: Boolean = True): Boolean; override;
begin
  if BankPin.IsOpen() and (not BankPin.Enter(Login.GetPlayerPin())) then
    Self.Fatal('Failed to enter bank pin');

  Result := inherited(WaitForItems);
end;

procedure TRSClient.ClientModeChanged(); override;
begin
  inherited;

  BankPin.SetupAlignment(Self.Mode);
end;

procedure TSRL.Setup(); override;
begin
  inherited;

  BankPin.Setup();
end;

procedure TSRL.Debug(Bitmap: TMufasaBitmap); override;
begin
  inherited;

  BankPin.Draw(Bitmap);
end;
